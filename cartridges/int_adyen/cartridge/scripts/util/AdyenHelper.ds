/**
*
*/
var dwsvc		= require ("dw/svc");
var dwnet		= require ("dw/net");
var dwsystem	= require ("dw/system");
var dwutil		= require ("dw/util");

var adyenCurrentSite = dwsystem.Site.getCurrent();

var __AdyenHelper : Object = {	

	//service constants
	SERVICE : {
		SEND : "SEND",
		METHODS : "METHODS",
		SECURE : "3DSECURE"
	},
	MODE : {
		TEST : "TEST",
		LIVE : "LIVE"
	},
	
	
	/**
	 * 	@name getAdyenPaymentSendServicePrefix
 	 * 	@desc returns the value of site pref AdyenPaymentSendServicePrefix
	 */
	getAdyenPaymentSendServicePrefix : function(site : dwsystem.Site) : String {
		var returnValue : String = "";
		if(!empty(site) && !empty(site.getCustomPreferenceValue('AdyenPaymentSendServicePrefix'))) {
			returnValue = site.getCustomPreferenceValue('AdyenPaymentSendServicePrefix');
		}
		dwsystem.Logger.getLogger("Adyen", "adyen").debug("AdyenPaymentSendServicePrefix = {0}, for site {1}", returnValue, site.getID());
		return returnValue;
	},

	/**
	 * 	@name getAdyenPaymentMethodsServicePrefix
 	 * 	@desc returns the value of site pref AdyenPaymentMethodsServicePrefix
	 */
	getAdyenPaymentMethodsServicePrefix : function(site : dwsystem.Site) : String {
		var returnValue : String = "";
		if(!empty(site) && !empty(site.getCustomPreferenceValue('AdyenPaymentMethodsServicePrefix'))) {
			returnValue = site.getCustomPreferenceValue('AdyenPaymentMethodsServicePrefix');
		}
		dwsystem.Logger.getLogger("Adyen", "adyen").debug("AdyenPaymentMethodsServicePrefix = {0}, for site {1}", returnValue, site.getID());
		return returnValue;
	},
	
	/**
	 * 	@name getAdyenPaymentSecureServicePrefix
 	 * 	@desc returns the value of site pref AdyenPaymentMethodsServicePrefix
	 */
	getAdyenPaymentSecureServicePrefix : function(site : dwsystem.Site) : String {
		var returnValue : String = "";
		if(!empty(site) && !empty(site.getCustomPreferenceValue('AdyenPaymentSecureServicePrefix'))) {
			returnValue = site.getCustomPreferenceValue('AdyenPaymentSecureServicePrefix');
		}
		dwsystem.Logger.getLogger("Adyen", "adyen").debug("AdyenPaymentSecureServicePrefix = {0}, for site {1}", returnValue, site.getID());
		return returnValue;
	},

	getService : function (service : String) : Object {
		// Create the service config (used for all services)
		var adyenService = null;
		var servicePrefix = "";
		switch (service) {
			case __AdyenHelper.SERVICE.SEND :
				servicePrefix = __AdyenHelper.getAdyenPaymentSendServicePrefix(adyenCurrentSite);
				break;
			case __AdyenHelper.SERVICE.METHODS :
				servicePrefix = __AdyenHelper.getAdyenPaymentMethodsServicePrefix(adyenCurrentSite);
				break;
			case __AdyenHelper.SERVICE.SECURE :
				servicePrefix = __AdyenHelper.getAdyenPaymentSecureServicePrefix(adyenCurrentSite);
				break;
		}
		var serviceName = servicePrefix + '.' + adyenCurrentSite.ID;
		try {
			adyenService = dwsvc.ServiceRegistry.get(serviceName);
			dwsystem.Logger.getLogger("Adyen", "adyen").debug("Succsessffuly retrive service with name {0}", serviceName);
		} catch (e) {
			var ex = e;
			dwsystem.Logger.getLogger("Adyen", "adyen").error("Can't get service instance with name {0}", serviceName);
			//e.message
		}
		
		return adyenService;		
	},
	
	getAdyenMode : function () : String {
		var returnValue : String = "";
		if(!empty(adyenCurrentSite) && !empty(adyenCurrentSite.getCustomPreferenceValue('Adyen_Mode'))) {
			returnValue = adyenCurrentSite.getCustomPreferenceValue('Adyen_Mode').value;
		}
		return returnValue;
	},
	
	getCSEJsUrl : function () : String {
		var returnValue : String = "";
		switch (__AdyenHelper.getAdyenMode()) {
			case __AdyenHelper.MODE.TEST :
				returnValue = adyenCurrentSite.getCustomPreferenceValue('AdyenCseTestJsURL');
				break;	
			case __AdyenHelper.MODE.LIVE :
				returnValue = adyenCurrentSite.getCustomPreferenceValue('AdyenCseProdJsURL');
				break;	
		}
		
		return returnValue;
	},
	
	getAdyenCseEnabled : function () : Boolean {
		var returnValue : Boolean = false;
		if(!empty(adyenCurrentSite) && !empty(adyenCurrentSite.getCustomPreferenceValue('AdyenCseEnabled'))) {
			returnValue = adyenCurrentSite.getCustomPreferenceValue('AdyenCseEnabled');
		}
		return returnValue;
	},
	
	getAdyenCseJsPublicKey : function () : String {
		var returnValue : String = "";
		if(!empty(adyenCurrentSite) && !empty(adyenCurrentSite.getCustomPreferenceValue('AdyenCseJsPublicKey'))) {
			returnValue = adyenCurrentSite.getCustomPreferenceValue('AdyenCseJsPublicKey');
		}
		return returnValue;
	},
	
	getAdyenAVSEnabled : function () : Boolean {
		var returnValue : Boolean = false;
		if(!empty(adyenCurrentSite) && !empty(adyenCurrentSite.getCustomPreferenceValue('Adyen_enableAVS'))) {
			returnValue = adyenCurrentSite.getCustomPreferenceValue('Adyen_enableAVS');
		}
		return returnValue;
	},
	
	getCurrencyValueForApi : function ( amount ) : String {		
		var currencyCode = dwutil.Currency.getCurrency(amount.currencyCode); 
		var digitsNumber = __AdyenHelper.getFractionDigits(currencyCode);
        var apiAmount = amount.multiply(1000).value;
        if ( digitsNumber == 0 ) apiAmount = amount.value;
        else if ( digitsNumber == 1 ) apiAmount = amount.multiply(10).value;
        else if ( digitsNumber == 2 ) apiAmount = amount.multiply(100).value;
        return Math.round(apiAmount);
	},
	
	getFractionDigits : function (currencyCode) : Number {
		var format;
		switch(currencyCode) {
			case "JPY":
            case "IDR":
            case "KRW":
            case "BYR":
            case "VND":
            case "CVE":
            case "DJF":
            case "GNF":
            case "PYG":
            case "RWF":
            case "UGX":
            case "VUV":
            case "XAF":
            case "XOF":
            case "XPF":
            case "GHC":
            case "KMF":
                format = 0;
                break;
            case "MRO":
                format = 1;
                break;
            case "BHD":
            case "JOD":
            case "KWD":
            case "OMR":
            case "LYD":
            case "TND":
                format = 3;
                break;
            default:
                format = 2;
                break;
		}
		return format;
	},
	
	getAdyenOrderPaymentInstrument : function(order : dw.order.Order) {
		var adyenOrderPaymentInstrument = null;
		if (order) {
			var paymentInstruments : dw.util.Collection = order.getPaymentInstruments();
			for each (let paymentInstrument in paymentInstruments) {			
				let paymentProcessor = paymentInstrument.getPaymentTransaction().getPaymentProcessor();
	            let paymentProcessorID = paymentProcessor ? paymentProcessor.getID(): paymentInstrument.getPaymentMethod();
	
				if (paymentProcessorID.equals("Adyen") || paymentProcessorID.equals("ADYEN_CREDIT")) {
					adyenOrderPaymentInstrument = paymentInstrument;
					break;
				}
			}
		}
		
		return adyenOrderPaymentInstrument;
	},
	
	saveAuthResponseAttributes : function(transaction : dw.order.PaymentTransaction, map : dw.web.HttpParameterMap) {
		transaction.custom.Adyen_authResult = map.isParameterSubmitted('authResult') ? map.authResult.stringValue : '';
		transaction.custom.Adyen_merchantReference = map.isParameterSubmitted('merchantReference') ? map.merchantReference.stringValue : '';
		transaction.custom.Adyen_paymentMethod = map.isParameterSubmitted('paymentMethod') ? map.paymentMethod.stringValue : '';
		transaction.custom.Adyen_pspReference = map.isParameterSubmitted('pspReference') ? map.pspReference.stringValue : '';
		transaction.custom.Adyen_shopperLocale = map.isParameterSubmitted('shopperLocale') ? map.shopperLocale.stringValue : '';
		transaction.custom.Adyen_skinCode = map.isParameterSubmitted('skinCode') ? map.skinCode.stringValue : '';
		transaction.custom.Adyen_merchantSig = map.isParameterSubmitted('merchantSig') ? map.merchantSig.stringValue : '';
		transaction.custom.Adyen_merchantReturnData = map.isParameterSubmitted('merchantReturnData') ? map.merchantReturnData.stringValue : '';
	}
}

module.exports= __AdyenHelper;
